import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'spring-boot'
apply plugin: 'cloudfoundry'

jar {
    baseName = 'accounts-web-service'
    version = appVersion
}

group = "com.wakaleo.flying-high"

install {
    repositories.mavenInstaller {
        pom.project {
            parent {
                groupId 'org.springframework.boot'
                artifactId 'spring-boot-starter-parent'
                version "1.1.6.RELEASE"
            }
        }
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.data:spring-data-mongodb")
    compile("org.springframework.data:spring-data-rest-webmvc")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.codehaus.groovy:groovy-all:2.3.6")
    compile("com.google.guava:guava:18.0")

    compile project(":flights-web-service")

    testCompile("org.spockframework:spock-core:0.7-groovy-2.0")
    testCompile("junit:junit")
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile "org.codehaus.groovy.modules.http-builder:http-builder:0.7"
    testCompile 'org.easytesting:fest-assert-core:2.0M10'

    testCompile 'com.insightfullogic:lambda-behave:0.3'
}

test {
    maxParallelForks 4
    useJUnit()

    include '**/When*.class'
    exclude '**/*IT.class'

    testLogging {
        events "passed", "skipped", "failed"
    }
}

task integrationTests(type: Test) {

    if (project.hasProperty('localhost')) {
        systemProperty 'mongodb.host', 'localhost'
        systemProperty 'mongodb.port', '27017'
        systemProperty 'mongodb.database', 'flyinghigh'
        systemProperty 'mongodb.username', ''
        systemProperty 'mongodb.password', ''
    } else {
        systemProperty 'mongodb.host', 'ds039020.mongolab.com'
        systemProperty 'mongodb.port', '39020'
        systemProperty 'mongodb.database', 'flyinghigh-integration'
        systemProperty 'mongodb.username', 'flyinghigh'
        systemProperty 'mongodb.password', 'flyinghigh'
    }

    include '**/*IT.class'
    testLogging {
        events "passed", "skipped", "failed"
    }
}
integrationTests.dependsOn test
check.dependsOn integrationTests

processResources {
    filter ReplaceTokens, tokens: [
        "application.version": project.jar.version,
        "build.number": buildNumber
    ]
}

if (project.hasProperty('production')) {
    cloudfoundry {
        space = 'production'
        uri = 'http://prod-accounts.cfapps.io'
    }
} else {
    cloudfoundry {
        space = 'development'
        uri = 'http://dev-accounts.cfapps.io'
    }
}

//cloudfoundry {
//    target = 'https://api.run.pivotal.io'
//    application = 'accounts'
//    username = cfUsername
//    password = cfPassword
//    file = file("${jar.archivePath}")
//    buildpack = 'https://github.com/cloudfoundry/java-buildpack'
//    services {
//        'mongodb' {
//            label = 'mongolab'
//            plan = 'sandbox'
//            bind = true
//        }
//    }
//}